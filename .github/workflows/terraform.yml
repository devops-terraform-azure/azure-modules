name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    env:
      TF_VAR_AZURE_SUBSCRIPTION_ID  : ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_AZURE_TENANT_ID        : ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_AZURE_CLIENT_ID        : ${{ secrets.AZURE_CLIENT_ID }}
      TF_VAR_AZURE_CLIENT_SECRET    : ${{ secrets.AZURE_CLIENT_SECRET }}
      
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: azure/login@v2
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Setup Terraform variables
      id: vars
      run: |-
        cat > pipeline.auto.tfvars <<EOF
        AZURE_SUBSCRIPTION_ID = "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
        AZURE_TENANT_ID       = "${{ secrets.AZURE_TENANT_ID }}"
        AZURE_CLIENT_ID       = "${{ secrets.AZURE_CLIENT_ID }}"
        AZURE_CLIENT_SECRET   = "${{ secrets.AZURE_CLIENT_SECRET }}"
        EOF

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      run: terraform plan

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply

    - name: Terraform Destroy
      run: terraform destroy
